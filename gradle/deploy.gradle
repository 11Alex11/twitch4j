import java.text.SimpleDateFormat

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'de.lukaskoerfer.gradle.delombok'

ext {
	projectName = !rootProject.name.equalsIgnoreCase(project.name) ? "${rootProject.name}-${project.name}".toLowerCase() : rootProject.name.toLowerCase()
	bintrayUser = findProperty("bintrayUser").toString() ?: System.env.BINTRAY_USER
	bintrayApiKey = findProperty("bintrayApiKey").toString() ?: System.env.BINTRAY_API_KEY
}

/**
 * Javadoc
 */
javadoc {
	source = delombok
	options {
		overview = file("${rootDir}/gradle/javadoc/overview.html")
		title = "Twitch 4 Java - ${projectName} (${project.version})"
		windowTitle = "${projectName} (${project.version})"
		stylesheetFile = file("${rootDir}/gradle/javadoc/css/style.css")
		encoding = "UTF-8"
	}
}

private def static timestamp() {
	SimpleDateFormat sdf = new SimpleDateFormat("MMM dd yyyy HH:mm:ss zzz")
	sdf.setTimeZone(TimeZone.getTimeZone("GMT"))
	return sdf.format(new Date())
}

jar {
	manifest {
		attributes([
				'Manifest-Version': '1.0',
				'Created-By': "Gradle ${gradle.gradleVersion} - JDK ${System.getProperty("java.specification.version")} (${System.getProperty("java.version")})",
				'Implementation-Title': project.group,
				'Implementation-Vendor': rootProject.name,
		        'Implementation-Version': project.version,
				'Implementation-Date': timestamp()
		])
	}
}

/**
 * Sources - build a jar with source files
 */
task sourcesJar(type: Jar, dependsOn: classes, description: 'Builds the sourcesJar.', group: 'build') {
	from sourceSets.main.allSource
	baseName = projectName.toLowerCase()
	classifier = 'sources'
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc, description: 'Builds the javadocJar.', group: 'build') {
	classifier = 'javadoc'
	baseName = projectName.toLowerCase()
	from javadoc.destinationDir
}

/**
 * Artifacts
 */
artifacts {
	archives sourcesJar
	archives javadocJar
}

/**
 * Deployment
 */
publishing {
	publications {
		mainProject(MavenPublication) {
			from project.components.java
			artifact sourcesJar
			artifact javadocJar
			groupId project.group
			artifactId projectName
			version project.version
		}
	}
}

/**
 * Release upload
 */
bintray {
	user = bintrayUser
	key = bintrayApiKey
	publications = ['mainProject']
	dryRun = false 		// Dry Run without deployment - for test deployment
	publish = false 	// automatically publish
	override = true 	// override version artifacts already published
	pkg {
		// jcenter repository namespace and name
		userOrg = 'twitch4j'
		repo = 'maven'
		name = "Twitch4J"
		desc = project.description
		websiteUrl = url
		issueTrackerUrl = "${projectUrl}/issues"
		vcsUrl = gitUrl
		licenses = ['MIT']
		labels = [ 'twitch', 'kraken', 'helix', 'twitch-pubsub', 'twitch-irc' ]
		publicDownloadNumbers = true
		version {
			name = project.version
			vcsTag = System.env.CI_COMMIT_REF_NAME ?: project.version
			released = Calendar.getInstance(TimeZone.getTimeZone("GMT")).time
		}
	}
}

artifactory {
	contextUrl = 'https://oss.jfrog.org/artifactory'
	publish {
		repository {
			repoKey = 'oss-snapshot-local'
			username = bintrayUser
			password = bintrayApiKey
		}
		defaults {
			publications 'mainProject'
		}
	}
}
